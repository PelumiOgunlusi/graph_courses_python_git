---
title: "Python Workshop: Data Subsetting"
author: "PELUMI OGUNLUSI"
---
# Importing relevant libraries
```{python}
import pandas as pd
pd.set_option('display.max_columns', None)
```

# Importing the dataset
```{python}
loans = pd.read_csv('data/loans_full_schema.csv')
loans
```
# Dropping rownames column
```{python}
loans.drop(columns=['rownames'], inplace=True)
loans
```
## Data Subset 1: Extract demographic information
```{python}
demog_info = loans[['emp_title','emp_length','state','homeownership']]
demog_info
```

Renaming columns
```{python}
demog_info.rename(columns={'emp_title':'employment_title', 'emp_length':'employment_length_yrs'},inplace=True) 
demog_info
```

Exporting the dataset to a CSV file

```{python}
demog_info.to_csv('Demographic_Information.csv', index=False)
```

## Data Subset 2: Extract credit evaluation variables

```{python}
credit_vars = loans.filter(regex='credit')
credit_vars
```

Exporting the dataset to a CSV file

```{python}
credit_vars.to_csv('credit_variables.csv',index=False)
```

## Data Subset 3: Extract high-income borrowers

Create a subset of only high-income borrowers (annual income > $100,000). Call your subset `high_income`.

```{python}
high_income= loans.query('annual_income > 100000')
high_income
```

Exporting the subset to a CSV file

```{python}
high_income.to_csv('high_income.csv', index=False)
```

## Data Subset 4: Extract high-risk loans 

Create a subset of high-risk loans, defined as those meeting ANY of these criteria:

- Interest rate is greater than 15%
- Debt-to-income ratio is greater than 30 (use the individual debt-to-income, not joint)
- Have had any delinquencies in the last 2 years

Call your subset `high_risk`. 

```{python}
high_risk = loans.query("interest_rate >15| debt_to_income > 30 | delinq_2y != 0")
high_risk
```
Exportng the subset to a CSV file.

```{python}
high_risk.to_csv('high_risk.csv', index=False)
```

## Data Subset 5: Extract "prime" borrowers

Create a subset of prime borrowers, defined as those meeting ALL of these criteria:

- Grade A or B
- Debt-to-income ratio is less than 20
- Have NOT had any delinquencies in the last 2 years


```{python}
prime = loans.query("grade.str.contains('A|B') & debt_to_income <30 & delinq_2y ==0")
prime
```

Export the subset to a CSV file.

```{python}
prime.to_csv('prime_borrowes.csv', index=False)
```

## Optional Challenge: Export to Excel

For an extra challenge, export all subsets to a single Excel workbook with multiple sheets using the `pd.ExcelWriter()` function.


```{python}
pip install openpyxl
```


```{python}
import openpyxl 
# Use the ExcelWriter to export each subset to a separate sheet
with pd.ExcelWriter('data/loans_subset.xlsx')as writer:
    demog_info.to_excel(writer, sheet_name='demographic_information',index=False)
    credit_vars.to_excel(writer, sheet_name='credit_variables',index=False)
    high_income.to_excel(writer, sheet_name='high_income', index=False)
    high_risk.to_excel(writer, sheet_name='high_risk', index=False)
    prime.to_excel(writer, sheet_name='prime_borrowers', index=False)
```